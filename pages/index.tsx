import type { NextPage } from 'next'
import Head from 'next/head'
import { Header,PostItem } from '../components'

import { Issues } from '../types'
import { queryPostsFromIssues, renderProfileMarkdown } from '../utils'

interface BlogProps {
  issues: Issues
  profile: string
}

const Blog: NextPage<BlogProps> = (props: BlogProps) => {

  const { issues, profile } = props
  return (
    <div className=' bg-amber-100'>
      <Head>
        <title>yuqimao854</title>
        <meta name="description" content="Generated by yuqimao" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div >
     
        <div className="lg:flex justify-between">
          <div dangerouslySetInnerHTML={{ __html: profile }} />
          <div className='w-full p-0 m-0 md:grid md:grid-cols-2 md:gap-2'>

             <div className='w-full p-0 m-0 md:grid md:grid-cols-2 md:gap-2'>
              {issues.nodes.map(item => {
                return <PostItem {...item} key={item.id} />
              })}
            </div>

          </div>
        </div>
      
      </div>

    </div>
  )
}



export const getServerSideProps = async () => {
  // Fetch data from external API


  const [
    {
      repository: { issues }
    }, {
      data: profile
    }] = await Promise.all([
      await queryPostsFromIssues(),
      await renderProfileMarkdown()
    ])

  // Pass data to the page via props
  return { props: { issues: issues, profile } }
}

export default Blog