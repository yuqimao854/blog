import type { NextPage } from 'next'
import Head from 'next/head'
import { Issues } from '../types'
import { queryPostsFromIssues, renderProfileMarkdown } from '../utils'

interface BlogProps {
  issues: Issues
  profile: string
}

const Blog: NextPage<BlogProps> = (props:BlogProps) => {

  const {issues,profile} = props
  return (
    <div>
      <Head>
        <title>yuqimao854</title>
        <meta name="description" content="Generated by yuqimao" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="lg:flex"> 
        <div dangerouslySetInnerHTML={{__html:profile}} />
    <div className='w-full p-0 m-0 md:grid md:grid-cols-2 md:gap-2'>

 
        <div className='w-full p-0 m-0 md:grid md:grid-cols-2 md:gap-2'>
           {issues.nodes.map(item=>{
             return  <div className=' bg-red-100 mb-2 md:mb-0 list-none overflow-hidden cursor-pointer transform transition-special md:group-hover:opacity-50 hover:!opacity-100 md:hover:scale-110' >

                <div className='h-full p-6 md:p-10 bg-tertiary hover:shadow-sm transition duration-700 ease-in-out-quart'   key={item.id}>{item.title} </div>
              </div>
           })}
        </div>
        </div>
      </div>
    </div>
  )
}



export const   getServerSideProps   = async ()=> {
  // Fetch data from external API


  const [
    {
      repository:{issues}
    },{
      data:profile
    }] = await Promise.all([
    await queryPostsFromIssues(),
    await renderProfileMarkdown()
  ])
 
  // Pass data to the page via props
  return { props: { issues:issues,profile } }
}

export default Blog